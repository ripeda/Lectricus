"""
base.py: Base class for all exploits.
"""

import tempfile


class Exploit:

    def __init__(self, exploitable_application: str, javascript_payload: str) -> None:
        self._exploitable_application = exploitable_application
        self._javascript_payload      = javascript_payload

        self._exploit_file = tempfile.NamedTemporaryFile(delete=True, suffix=".js")


    def _convert_javascript_payload_to_file(self, payload: str) -> None:
        """
        Convert the JavaScript payload to a file.
        """
        # If payload is already a file, just copy it
        if payload.endswith(".js"):
            self._exploit_file.write(self._convert_file_to_javascript_payload(payload).encode())
            return

        with open(self._exploit_file.name, "w") as file:
            file.write(payload)


    def _convert_file_to_javascript_payload(self, file: str) -> str:
        """
        Convert the JavaScript payload to a file.
        """

        with open(file, "r") as file:
            return file.read()


    def run(self):
        raise NotImplementedError("Exploit not implemented.")